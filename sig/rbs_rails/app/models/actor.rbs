class Actor < ::ApplicationRecord
  extend _ActiveRecord_Relation_ClassMethods[Actor, ActiveRecord_Relation, Integer]

  module GeneratedAttributeMethods
    def id: () -> Integer

    def id=: (Integer) -> Integer

    def id?: () -> bool

    def id_changed?: () -> bool

    def id_change: () -> [ Integer?, Integer? ]

    def id_will_change!: () -> void

    def id_was: () -> Integer?

    def id_previously_changed?: () -> bool

    def id_previous_change: () -> Array[Integer?]?

    def id_previously_was: () -> Integer?

    def id_before_last_save: () -> Integer?

    def id_change_to_be_saved: () -> Array[Integer?]?

    def id_in_database: () -> Integer?

    def saved_change_to_id: () -> Array[Integer?]?

    def saved_change_to_id?: () -> bool

    def will_save_change_to_id?: () -> bool

    def restore_id!: () -> void

    def clear_id_change: () -> void

    def first_name: () -> String

    def first_name=: (String) -> String

    def first_name?: () -> bool

    def first_name_changed?: () -> bool

    def first_name_change: () -> [ String?, String? ]

    def first_name_will_change!: () -> void

    def first_name_was: () -> String?

    def first_name_previously_changed?: () -> bool

    def first_name_previous_change: () -> Array[String?]?

    def first_name_previously_was: () -> String?

    def first_name_before_last_save: () -> String?

    def first_name_change_to_be_saved: () -> Array[String?]?

    def first_name_in_database: () -> String?

    def saved_change_to_first_name: () -> Array[String?]?

    def saved_change_to_first_name?: () -> bool

    def will_save_change_to_first_name?: () -> bool

    def restore_first_name!: () -> void

    def clear_first_name_change: () -> void

    def last_name: () -> String

    def last_name=: (String) -> String

    def last_name?: () -> bool

    def last_name_changed?: () -> bool

    def last_name_change: () -> [ String?, String? ]

    def last_name_will_change!: () -> void

    def last_name_was: () -> String?

    def last_name_previously_changed?: () -> bool

    def last_name_previous_change: () -> Array[String?]?

    def last_name_previously_was: () -> String?

    def last_name_before_last_save: () -> String?

    def last_name_change_to_be_saved: () -> Array[String?]?

    def last_name_in_database: () -> String?

    def saved_change_to_last_name: () -> Array[String?]?

    def saved_change_to_last_name?: () -> bool

    def will_save_change_to_last_name?: () -> bool

    def restore_last_name!: () -> void

    def clear_last_name_change: () -> void

    def birthdate: () -> Date

    def birthdate=: (Date) -> Date

    def birthdate?: () -> bool

    def birthdate_changed?: () -> bool

    def birthdate_change: () -> [ Date?, Date? ]

    def birthdate_will_change!: () -> void

    def birthdate_was: () -> Date?

    def birthdate_previously_changed?: () -> bool

    def birthdate_previous_change: () -> Array[Date?]?

    def birthdate_previously_was: () -> Date?

    def birthdate_before_last_save: () -> Date?

    def birthdate_change_to_be_saved: () -> Array[Date?]?

    def birthdate_in_database: () -> Date?

    def saved_change_to_birthdate: () -> Array[Date?]?

    def saved_change_to_birthdate?: () -> bool

    def will_save_change_to_birthdate?: () -> bool

    def restore_birthdate!: () -> void

    def clear_birthdate_change: () -> void

    def country_id: () -> Integer

    def country_id=: (Integer) -> Integer

    def country_id?: () -> bool

    def country_id_changed?: () -> bool

    def country_id_change: () -> [ Integer?, Integer? ]

    def country_id_will_change!: () -> void

    def country_id_was: () -> Integer?

    def country_id_previously_changed?: () -> bool

    def country_id_previous_change: () -> Array[Integer?]?

    def country_id_previously_was: () -> Integer?

    def country_id_before_last_save: () -> Integer?

    def country_id_change_to_be_saved: () -> Array[Integer?]?

    def country_id_in_database: () -> Integer?

    def saved_change_to_country_id: () -> Array[Integer?]?

    def saved_change_to_country_id?: () -> bool

    def will_save_change_to_country_id?: () -> bool

    def restore_country_id!: () -> void

    def clear_country_id_change: () -> void

    def created_at: () -> ActiveSupport::TimeWithZone

    def created_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def created_at?: () -> bool

    def created_at_changed?: () -> bool

    def created_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def created_at_will_change!: () -> void

    def created_at_was: () -> ActiveSupport::TimeWithZone?

    def created_at_previously_changed?: () -> bool

    def created_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def created_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def created_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def created_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_created_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_created_at?: () -> bool

    def will_save_change_to_created_at?: () -> bool

    def restore_created_at!: () -> void

    def clear_created_at_change: () -> void

    def updated_at: () -> ActiveSupport::TimeWithZone

    def updated_at=: (ActiveSupport::TimeWithZone) -> ActiveSupport::TimeWithZone

    def updated_at?: () -> bool

    def updated_at_changed?: () -> bool

    def updated_at_change: () -> [ ActiveSupport::TimeWithZone?, ActiveSupport::TimeWithZone? ]

    def updated_at_will_change!: () -> void

    def updated_at_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_previously_changed?: () -> bool

    def updated_at_previous_change: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_previously_was: () -> ActiveSupport::TimeWithZone?

    def updated_at_before_last_save: () -> ActiveSupport::TimeWithZone?

    def updated_at_change_to_be_saved: () -> Array[ActiveSupport::TimeWithZone?]?

    def updated_at_in_database: () -> ActiveSupport::TimeWithZone?

    def saved_change_to_updated_at: () -> Array[ActiveSupport::TimeWithZone?]?

    def saved_change_to_updated_at?: () -> bool

    def will_save_change_to_updated_at?: () -> bool

    def restore_updated_at!: () -> void

    def clear_updated_at_change: () -> void
  end
  include GeneratedAttributeMethods
  def roles: () -> Role::ActiveRecord_Associations_CollectionProxy
  def roles=: (Role::ActiveRecord_Associations_CollectionProxy | Array[Role]) -> (Role::ActiveRecord_Associations_CollectionProxy | Array[Role])
  def role_ids: () -> Array[Integer]
  def role_ids=: (Array[Integer]) -> Array[Integer]
  def movies: () -> Movie::ActiveRecord_Associations_CollectionProxy
  def movies=: (Movie::ActiveRecord_Associations_CollectionProxy | Array[Movie]) -> (Movie::ActiveRecord_Associations_CollectionProxy | Array[Movie])
  def movie_ids: () -> Array[Integer]
  def movie_ids=: (Array[Integer]) -> Array[Integer]

  def country: () -> Country
  def country=: (Country?) -> Country?
  def reload_country: () -> Country?
  def build_country: (untyped) -> Country
  def create_country: (untyped) -> Country
  def create_country!: (untyped) -> Country
  module GeneratedAssociationMethods
  end
  include GeneratedAssociationMethods

  module GeneratedRelationMethods
  end

  class ActiveRecord_Relation < ::ActiveRecord::Relation
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Actor, Integer]
    include Enumerable[Actor]
  end

  class ActiveRecord_Associations_CollectionProxy < ::ActiveRecord::Associations::CollectionProxy
    include GeneratedRelationMethods
    include _ActiveRecord_Relation[Actor, Integer]
  end
end
